document.addEventListener('DOMContentLoaded', function() {
    // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
    const BOT_TOKEN = '–í–ê–®_–¢–û–ö–ï–ù_–ë–û–¢–ê';
    const CHAT_ID = 'ID_–ß–ê–¢–£'; // ID –≥—Ä—É–ø–∏ –∞–±–æ –≤–∞—à–æ–≥–æ —á–∞—Ç—É
    
    // –ó–º—ñ–Ω–∞ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–∞ –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç—É
    document.getElementById('contactType').addEventListener('change', function() {
        const contactInput = document.getElementById('contact');
        if (this.value === 'telegram') {
            contactInput.placeholder = "–ù–∞–ø—Ä–∏–∫–ª–∞–¥: @username";
        } else {
            contactInput.placeholder = "–ù–∞–ø—Ä–∏–∫–ª–∞–¥: 991234567";
        }
    });
    
    // –û–±—Ä–æ–±–∫–∞ —Ñ–æ—Ä–º–∏
    document.getElementById('requestForm').addEventListener('submit', async function(e) {
        e.preventDefault();
        
        // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ñ–æ—Ä–º–∏
        const formData = new FormData(this);
        const name = formData.get('name').trim();
        const contactType = formData.get('contactType');
        let contact = formData.get('contact').trim();
        const product = formData.get('product');
        const comment = formData.get('comment').trim();
        
        // –í–∞–ª—ñ–¥–∞—Ü—ñ—è —Ç–∞ —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –∫–æ–Ω—Ç–∞–∫—Ç—É
        if (contactType === 'telegram') {
            if (!contact.startsWith('@')) {
                contact = '@' + contact;
            }
        } else {
            // –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ –Ω–µ—Ü–∏—Ñ—Ä–æ–≤—ñ —Å–∏–º–≤–æ–ª–∏
            contact = contact.replace(/\D/g, '');
            // –î–æ–¥–∞—î–º–æ +380, —è–∫—â–æ –Ω–æ–º–µ—Ä –Ω–µ –º—ñ—Å—Ç–∏—Ç—å –∫–æ–¥—É –∫—Ä–∞—ó–Ω–∏
            if (!contact.startsWith('380') && contact.length === 9) {
                contact = '380' + contact;
            }
            contact = '+' + contact;
        }
        
        // –§–æ—Ä–º—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è Telegram
        const message = `üõí <b>–ù–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è!</b>\n\n` +
                       `üë§ <b>–Ü–º'—è:</b> ${name}\n` +
                       `üìû <b>–ö–æ–Ω—Ç–∞–∫—Ç:</b> ${contact}\n` +
                       `üõç <b>–¢–æ–≤–∞—Ä:</b> ${product}\n` +
                       `üí¨ <b>–ö–æ–º–µ–Ω—Ç–∞—Ä:</b> ${comment || '–Ω–µ–º–∞—î'}`;
        
        try {
            // –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —á–µ—Ä–µ–∑ Telegram API
            const response = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    chat_id: CHAT_ID,
                    text: message,
                    parse_mode: 'HTML'
                })
            });
            
            const result = await response.json();
            
            if (response.ok) {
                alert('‚úÖ –ó–∞—è–≤–∫—É —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ! –û—á—ñ–∫—É–π—Ç–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É Telegram.');
                this.reset();
            } else {
                throw new Error(result.description || '–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏');
            }
        } catch (error) {
            console.error('–ü–æ–º–∏–ª–∫–∞:', error);
            alert('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –∑–∞—è–≤–∫–∏. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –∞–±–æ –Ω–∞–ø–∏—à—ñ—Ç—å –Ω–∞–ø—Ä—è–º—É: @marketplace_bot');
        }
    });
});
